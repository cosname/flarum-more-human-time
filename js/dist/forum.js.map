{"version":3,"sources":["webpack://@cosname/humantime/webpack/bootstrap","webpack://@cosname/humantime/external \"flarum.core.compat['helpers/icon']\"","webpack://@cosname/humantime/external \"flarum.core.compat['extend']\"","webpack://@cosname/humantime/external \"flarum.core.compat['components/UserCard']\"","webpack://@cosname/humantime/external \"flarum.core.compat['components/TerminalPost']\"","webpack://@cosname/humantime/external \"flarum.core.compat['components/PostMeta']\"","webpack://@cosname/humantime/./src/forum/helpers/moreHumanTimeUtil.js","webpack://@cosname/humantime/./src/forum/helpers/moreHumanTime.js","webpack://@cosname/humantime/./src/forum/helpers/moreHumanTimeTimer.js","webpack://@cosname/humantime/./src/forum/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","moreHumanTimeUtil","time","mo","moment","now","isAfter","ago","diff","is_zh","locale","slice","year","format","fromNow","moreHumanTime","datetime","full","pubdate","title","data-humantime","updateHumanTimes","$","each","$this","this","attr","html","moreHumanTimeTimer","setInterval","app","initializers","has","replace","add","extend","UserCard","items","user","props","lastSeenAt","txt","translator","trans","joinTime","online","isOnline","className","icon","TerminalPost","view","discussion","lastPost","replyCount","PostMeta","vdom","children","attrs","post","createdAt"],"mappings":"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","file":"forum.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","module.exports = flarum.core.compat['helpers/icon'];","module.exports = flarum.core.compat['extend'];","module.exports = flarum.core.compat['components/UserCard'];","module.exports = flarum.core.compat['components/TerminalPost'];","module.exports = flarum.core.compat['components/PostMeta'];","/**\r\n * Derived from `humanTime` in Flarum Core, the `moreHumanTimeUtil` utility converts\r\n * a date to a (more) localized and human-readable time-ago string.\r\n *\r\n * @param {Date} time\r\n * @return {String}\r\n */\r\nexport default function moreHumanTimeUtil(time) {\r\n  let mo = moment(time);\r\n  const now = moment();\r\n\r\n  // To prevent showing things like \"in a few seconds\" due to small offsets\r\n  // between client and server time, we always reset future dates to the\r\n  // current time. This will result in \"just now\" being shown instead.\r\n  if (mo.isAfter(now)) {\r\n    mo = now;\r\n  }\r\n\r\n  const day = 864e5;\r\n  const diff = mo.diff(moment());\r\n  let ago = null;\r\n\r\n  // If this date was more than a month ago, we'll show the name of the month\r\n  // in the string. If it wasn't this year, we'll show the year as well.\r\n  // Take Chinese dates into consideration.\r\n  // Another option is https://stackoverflow.com/a/29641375\r\n  if (diff < -30 * day) {\r\n    const is_zh = (moment.locale().slice(0, 2) == 'zh');\r\n    if (mo.year() === moment().year()) {\r\n      ago = is_zh ? mo.format('MMMD日') : mo.format('D MMM');\r\n    } else {\r\n      ago = is_zh ? mo.format('YYYY年MMM'): mo.format('MMM \\'YY');\r\n    }\r\n  } else {\r\n    ago = mo.fromNow();\r\n  }\r\n\r\n  return ago;\r\n};\r\n","import moreHumanTimeUtil from './moreHumanTimeUtil';\r\n\r\n/**\r\n * The `moreHumanTime` helper displays a time in a (more) human-friendly time-ago format\r\n * (e.g. '12 days ago'), wrapped in a <time> tag with other information about\r\n * the time.\r\n *\r\n * @param {Date} time\r\n * @return {Object}\r\n */\r\nexport default function moreHumanTime(time) {\r\n  const mo = moment(time);\r\n\r\n  const datetime = mo.format();\r\n  const full = mo.format('LLLL');\r\n  const ago = moreHumanTimeUtil(time);\r\n\r\n  return <time pubdate datetime={datetime} title={full} data-humantime>{ago}</time>;\r\n}\r\n","import moreHumanTimeUtil from './moreHumanTimeUtil';\r\n\r\nfunction updateHumanTimes() {\r\n  $('[data-humantime]').each(function() {\r\n    const $this = $(this);\r\n    const ago = moreHumanTimeUtil($this.attr('datetime'));\r\n\r\n    $this.html(ago);\r\n  });\r\n}\r\n\r\n/**\r\n * The `moreHumanTimeTimer` initializer sets up a loop every 10 second to update\r\n * timestamps rendered with the `moreHumanTimeUtil` helper.\r\n */\r\nexport default function moreHumanTimeTimer() {\r\n  setInterval(updateHumanTimes, 10000);\r\n}\r\n","/*\r\n* Copyright (c) 2017-2018 Yixuan Qiu\r\n*/\r\nimport { extend } from 'flarum/extend';\r\nimport icon from 'flarum/helpers/icon';\r\nimport UserCard from 'flarum/components/UserCard';\r\nimport TerminalPost from 'flarum/components/TerminalPost';\r\nimport PostMeta from 'flarum/components/PostMeta';\r\nimport moreHumanTimeUtil from './helpers/moreHumanTimeUtil';\r\nimport moreHumanTime from './helpers/moreHumanTime';\r\nimport moreHumanTimeTimer from './helpers/moreHumanTimeTimer';\r\n\r\n// Replace the update timer or create a new one\r\nif (app.initializers.has('humanTime')) {\r\n  app.initializers.replace('humanTime', moreHumanTimeTimer);\r\n} else {\r\n  app.initializers.add('humanTime', moreHumanTimeTimer);\r\n}\r\n\r\napp.initializers.add('cosname-humantime', function() {\r\n  // Modify the format of 'joined' and 'lastSeen' dates for users\r\n  extend(UserCard.prototype, 'infoItems', function(items) {\r\n\r\n    const user = this.props.user;\r\n    const lastSeenAt = user.lastSeenAt();\r\n    // Time joined\r\n    if (items.has('joined')) {\r\n      const txt = app.translator.trans('core.forum.user.joined_date_text',\r\n        {ago: moreHumanTimeUtil(user.joinTime())});\r\n      items.replace('joined', txt);\r\n    }\r\n    // Time last seen\r\n    if (lastSeenAt && items.has('lastSeen')) {\r\n      const online = user.isOnline();\r\n      items.replace('lastSeen', (\r\n        <span className={'UserCard-lastSeen' + (online ? ' online' : '')}>\r\n          {online\r\n            ? [icon('fas fa-circle'), ' ', app.translator.trans('core.forum.user.online_text')]\r\n            : [icon('far fa-clock'), ' ', moreHumanTimeUtil(lastSeenAt)]}\r\n        </span>\r\n      ));\r\n    }\r\n\r\n  });\r\n\r\n  // Modify the dates in discussion list\r\n  TerminalPost.prototype.view = function() {\r\n    const discussion = this.props.discussion;\r\n    const lastPost = this.props.lastPost && discussion.replyCount();\r\n\r\n    const user = discussion[lastPost ? 'lastPostedUser' : 'user']();\r\n    const time = discussion[lastPost ? 'lastPostedAt' : 'createdAt']();\r\n\r\n    return (\r\n      <span>\r\n        {lastPost ? icon('fas fa-reply') : ''}{' '}\r\n        {app.translator.trans('core.forum.discussion_list.' + (lastPost ? 'replied' : 'started') + '_text', {\r\n          user,\r\n          ago: moreHumanTime(time)\r\n        })}\r\n      </span>\r\n    );\r\n  };\r\n\r\n  // Modify the format of post dates\r\n  extend(PostMeta.prototype, 'view', function(vdom) {\r\n\r\n    if (vdom.children && vdom.children[0].attrs && vdom.children[0].attrs.className == 'Dropdown-toggle') {\r\n      const post = this.props.post;\r\n      const time = post.createdAt();\r\n      vdom.children[0].children[0] = moreHumanTime(time);\r\n    }\r\n\r\n    return vdom;\r\n  });\r\n\r\n  // TODO: DiscussionListItem, Notification, PostEdited\r\n\r\n});\r\n"],"sourceRoot":""}